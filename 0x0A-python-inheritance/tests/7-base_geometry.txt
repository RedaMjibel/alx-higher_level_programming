The ``7-base_geometry`` module
===============================

Using ``BaseGeometry``
-------------------------------

Import function from module:
	>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Correct Class Type test:
	>>> bg == BaseGeometry()
	>>> type(bg) == BaseGeometry
	True


area() instance method
----------------------
area method is an instance method:
	>>>	type(BaseGeometry.__dict__['area'])
	<class 'function'>

area method called via class with no args:
	>>> bg.__class__.area()

area method normal test:
    >>> bg.area()
    Traceback (most recent call last):
    Exception: area() is not implemented

integer_validator() instance method
-----------------------------------
integer_validator is an instance method:
	>>> type(BaseGeometry.__dict__['integer_validator'])
	<class 'function'>

integer_validator method arg test (0 args):
	>>> bg.integer_validator()
	Traceback (most recent call last):
	TypeError: integer_validator() missing 2 required positional arguments: 'name' and value

integer_validator method float.0 value:
	>>> bg.integer_validator("test", 2.0)
	Traceback (most recent call last):
	TypeError: test must be an integer
