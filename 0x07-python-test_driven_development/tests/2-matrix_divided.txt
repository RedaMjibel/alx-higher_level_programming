The ``2-matrix_divided`` module
=============================

Using ``matrix_divided``
---------------------

import  module:

    >>> matrix_divided = __import__("2-matrix_divided").matrix_divided

Test normal matrix:
    >>> matrix_divided([[4, 6, 10], [1, 2, 3]], 2)
    [[2.0, 3.0, 5.0], [0.5, 1.0, 1.5]]

Test only one element:
    >>> matrix_divided([[4]], 2)
    [[2.0]]

Test division by zero:
    >>> matrix_divided([[4, 6, 10], [1, 2, 3]], 0)
    Traceback (most recent call last):
    ...
    ZeroDivisionError: division by zero

Test division by negative:
    >>> matrix_divided([[2, 4, 8], [1, 2, 3]], -3)
    [[-0.67, -1.33, -2.67], [-0.33, -0.67, -1.0]]

Test empty matrix:
    >>> matrix_divided([[]], 10)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Test matrix with different rows
    >>> matrix_divided([[2, 4, 8], [1, 3]], 2)
    Traceback (most recent call last):
    ...
    TypeError: Each row of the matrix must have the same size

Test unmodified matrix:
    >>> m = [[2, 4, 8], [1, 2, 3]]
    >>> matrix_divided(m, 2)
    [[1.0, 2.0, 4.0], [0.5, 1.0, 1.5]]
    >>> m[1][1]
    2

Test division by nan:
    >>> matrix_divided([[2, 4, 8], [1, 2, 3]], float('nan'))
    [[nan, nan, nan], [nan, nan, nan]]

Test 1st arg none:
    >>> matrix_divided(none, 1)
    Traceback (most recent call last):
    ...
    NameError: name 'none' is not defined

Test matrix with non number
    >>> matrix_divided([[2, 4, 8], [1, "foo", 3]], 2)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

Test empty matrix more:
    >>> matrix_divided([[], [], []], 10)
    Traceback (most recent call last):
    ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats
